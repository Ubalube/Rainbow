package me.xboxsignout.rainbow;

import java.util.HashMap;
import java.util.List;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener
{
	
	Settings settings = Settings.getInstance();
	//private OperatorSelect menu;
	private Matchmaking match;
	private ArenaModify modify;
	
	HashMap<String, UUID> selectedArena;
	
	@Override
	public void onEnable() {
		//menu = new OperatorSelect(this);
		
		settings.setup(this);
		match = new Matchmaking(this, settings);
		modify = new ArenaModify(this, settings);
		getLogger().info("Craft Six Siege has been enabled!");
		Bukkit.getServer().getPluginManager().registerEvents(this, this);
		getLogger().info("Craft Six Siege listeners ready!");
		getLogger().info("Craft Six Siege commands ready!");
	}
	
	@Override
	public void onDisable() {
		getLogger().info("Craft Six Siege has been disabled!");
	}
	
	public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args) 
	{
        if (!(sender instanceof Player)) {
                sender.sendMessage(ChatColor.RED + "The console cannot use Medic!");
                return true;
        }
       
        Player p = (Player) sender;
       
        if (cmd.getName().equalsIgnoreCase("join")) 
        {
        	p.sendMessage(ChatColor.GREEN + "UI Opened");
        	match.show(p);
        }
        
        if(cmd.getName().equalsIgnoreCase("modifyarena"))
        {
        	if(args.length == 0)
        	{
        		p.sendMessage(ChatColor.RED + "Please specify an arena you would like to modify!");
        		return true;
        	}
        	
        	modify.show(p, args[0]);
        	
        }
        
        if (cmd.getName().equalsIgnoreCase("setarena")) {
            if (args.length == 0) {
                    p.sendMessage(ChatColor.RED + "Please specify a name!");
                    return true;
            }
            settings.getData().set("arenas." + args[0] + ".world", p.getLocation().getWorld().getName());
            settings.getData().set("arenas." + args[0] + ".x", p.getLocation().getX());
            settings.getData().set("arenas." + args[0] + ".y", p.getLocation().getY());
            settings.getData().set("arenas." + args[0] + ".z", p.getLocation().getZ());
            settings.getData().set("arenas." + args[0] + ".mode", "casual");
            List<String> arena = settings.getData().getStringList("arenalist");
            arena.add(args[0]);
        	settings.getData().set("arenalist", arena);
            settings.saveData();
            p.sendMessage(ChatColor.GREEN + "Set arena " + args[0] + "!");
        }
        
        if (cmd.getName().equalsIgnoreCase("joinarena")) {
            if (args.length == 0) {
                    p.sendMessage(ChatColor.RED + "Please specify a name!");
                    return true;
            }
            if (settings.getData().getConfigurationSection("arenas." + args[0]) == null) {
                    p.sendMessage(ChatColor.RED + "Arena " + args[0] + " does not exist!");
                    return true;
            }
            World w = Bukkit.getServer().getWorld(settings.getData().getString("arenas." + args[0] + ".world"));
            double x = settings.getData().getDouble("arenas." + args[0] + ".x");
            double y = settings.getData().getDouble("arenas." + args[0] + ".y");
            double z = settings.getData().getDouble("arenas." + args[0] + ".z");
            p.teleport(new Location(w, x, y, z));
            p.sendMessage(ChatColor.GREEN + "Joined " + args[0] + "!");
        }
        
        if (cmd.getName().equalsIgnoreCase("delarena")) {
            if (args.length == 0) {
                    p.sendMessage(ChatColor.RED + "Please specify a name!");
                    return true;
            }
            if (settings.getData().getConfigurationSection("arenas." + args[0]) == null) {
                    p.sendMessage(ChatColor.RED + "Arena " + args[0] + " does not exist!");
                    return true;
            }
            List<String> arena = settings.getData().getStringList("arenalist");
            arena.remove(args[0]);
        	settings.getData().set("arenalist", arena);
            settings.saveData();
            p.sendMessage(ChatColor.GREEN + "Removed arena " + args[0] + "!");
        }
        
        return true;
	}
	
}
